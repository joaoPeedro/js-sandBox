{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/get-static-props/index.js\",\n    _this = this;\n\n//file system acess\nvar index = function index(props) {\n  var products = props.products;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(function (e) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [e.id, \": \", e.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}; // this function run's on the build process\n// to pre fectch the data\n// data will be passed to props component\n\n\n// export async function getStaticProps(context) {\n//   // cwd: corrent working directory\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data\n//   const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n//   const jsonData = await fs.readFileSync(filePath);\n//   const data = JSON.parse(jsonData);\n//   return {\n//     props: {\n//       products: data.products,\n//     },\n//   };\n// }\nexport var __N_SSG = true;\nexport default index;","map":{"version":3,"sources":["/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/get-static-props/index.js"],"names":["index","props","products","map","e","id","title"],"mappings":";;;;;;AAAA;AAIA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfC,QADe,GACFD,KADE,CACfC,QADe;AAEvB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBACGA,QAAQ,CAACC,GAAT,CAAa,UAACC,CAAD;AAAA,4BACZ;AAAA,qBACGA,CAAC,CAACC,EADL,QACWD,CAAC,CAACE,KADb;AAAA;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAb;AADH;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAYD,CAdD,C,CAgBA;AACA;AACA;;;AAiBA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeN,KAAf","sourcesContent":["//file system acess\nimport fs from \"fs\";\nimport path from \"path\";\n\nconst index = (props) => {\n  const { products } = props;\n  return (\n    <>\n      <h2>products</h2>\n      <ul>\n        {products.map((e) => (\n          <li>\n            {e.id}: {e.title}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\n// this function run's on the build process\n// to pre fectch the data\n// data will be passed to props component\nexport const getStaticProps = async (context) => {\n  // cwd: corrent working directory\n  const filePath = path.join(\n    process.cwd(),\n    \"pages/page-pre-rendering/data\",\n    \"dummy-data.json\"\n  );\n  const jsonData = await fs.readFileSync(filePath);\n  const data = JSON.parse(jsonData);\n  return {\n    props: {\n      products: data.products,\n    },\n  };\n};\n\n// export async function getStaticProps(context) {\n//   // cwd: corrent working directory\n\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data\n\n//   const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n\n//   const jsonData = await fs.readFileSync(filePath);\n//   const data = JSON.parse(jsonData);\n//   return {\n//     props: {\n//       products: data.products,\n//     },\n//   };\n// }\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}