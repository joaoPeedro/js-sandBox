{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/get-static-props/index.js\";\n//file system acess\nimport fs from \"fs\";\nimport path from \"path\";\n\nconst index = props => {\n  const {\n    products\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"TEST\", products.map(e => e)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}; // this function run's on the build process\n// to pre fectch the data\n// data will be passed to props component\n\n\nexport const getStaticProps = async context => {\n  // cwd: corrent working directory\n  const filePath = path.join(process.cwd(), \"pages/page-pre-rendering/data\", \"dummy-data.json\");\n  const jsonData = await fs.readFileSync(filePath);\n  const data = JSON.parse(jsonData);\n  return {\n    props: {\n      products: data.products\n    }\n  };\n}; // export async function getStaticProps(context) {\n//   // cwd: corrent working directory\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data\n//   const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n//   const jsonData = await fs.readFileSync(filePath);\n//   const data = JSON.parse(jsonData);\n//   return {\n//     props: {\n//       products: data.products,\n//     },\n//   };\n// }\n\nexport default index;","map":{"version":3,"sources":["/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/get-static-props/index.js"],"names":["fs","path","index","props","products","map","e","getStaticProps","context","filePath","join","process","cwd","jsonData","readFileSync","data","JSON","parse"],"mappings":";;AAAA;AACA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,sBAAO;AAAA,uBAAUC,QAAQ,CAACC,GAAT,CAAcC,CAAD,IAAOA,CAApB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD,C,CAKA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AACA,QAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAL,CACfC,OAAO,CAACC,GAAR,EADe,EAEf,+BAFe,EAGf,iBAHe,CAAjB;AAKA,QAAMC,QAAQ,GAAG,MAAMb,EAAE,CAACc,YAAH,CAAgBL,QAAhB,CAAvB;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAb;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEW,IAAI,CAACX;AADV;AADF,GAAP;AAKD,CAdM,C,CAgBP;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,KAAf","sourcesContent":["//file system acess\nimport fs from \"fs\";\nimport path from \"path\";\n\nconst index = (props) => {\n  const { products } = props;\n  return <div>TEST{products.map((e) => e)}</div>;\n};\n\n// this function run's on the build process\n// to pre fectch the data\n// data will be passed to props component\nexport const getStaticProps = async (context) => {\n  // cwd: corrent working directory\n  const filePath = path.join(\n    process.cwd(),\n    \"pages/page-pre-rendering/data\",\n    \"dummy-data.json\"\n  );\n  const jsonData = await fs.readFileSync(filePath);\n  const data = JSON.parse(jsonData);\n  return {\n    props: {\n      products: data.products,\n    },\n  };\n};\n\n// export async function getStaticProps(context) {\n//   // cwd: corrent working directory\n\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data/dummy-data.json\n//   //   /Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/data\n\n//   const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n\n//   const jsonData = await fs.readFileSync(filePath);\n//   const data = JSON.parse(jsonData);\n//   return {\n//     props: {\n//       products: data.products,\n//     },\n//   };\n// }\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}