{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/get-server-side-props/[userId].js\";\n\nconst UserprofilePage = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 10\n  }, this);\n};\n\nconst getServerSideProps = async context => {\n  const {\n    params,\n    req,\n    res\n  } = context;\n  console.log(req); //https://nodejs.org/api/http.html#http_class_http_incomingmessage\n\n  console.log(res); //https://nodejs.org/api/http.html#http_class_http_serverresponse\n\n  const userId = params.userId; //   if (!data) {\n  //     return {\n  //       notFound: true,\n  //     };\n  //   }\n\n  return {\n    //this dont use a revalidate becouse this ocours on every serverSide render  request\n    props: {\n      id: `user-id-${userId}`\n    },\n    // tipial case when you do not have data to show\n    notFound: false //boolean default is false\n    // redirect - if you need to redirect the user to other page\n    // redirect: {\n    //   destination : \"/noData\"\n    // }\n\n  };\n};\n\nexport default UserprofilePage;\nexport { getServerSideProps };","map":{"version":3,"sources":["/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/get-server-side-props/[userId].js"],"names":["UserprofilePage","props","id","getServerSideProps","context","params","req","res","console","log","userId","notFound"],"mappings":";;;AAAA,MAAMA,eAAe,GAAIC,KAAD,IAAW;AACjC,sBAAO;AAAA,cAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AAC5C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,GAAV;AAAeC,IAAAA;AAAf,MAAuBH,OAA7B;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAH4C,CAG1B;;AAClBE,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAJ4C,CAI1B;;AAElB,QAAMG,MAAM,GAAGL,MAAM,CAACK,MAAtB,CAN4C,CAQ5C;AACA;AACA;AACA;AACA;;AAEA,SAAO;AACL;AACAT,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAG,WAAUQ,MAAO;AADjB,KAFF;AAML;AACAC,IAAAA,QAAQ,EAAE,KAPL,CAOY;AAEjB;AACA;AACA;AACA;;AAZK,GAAP;AAcD,CA5BD;;AA8BA,eAAeX,eAAf;AACA,SAASG,kBAAT","sourcesContent":["const UserprofilePage = (props) => {\n  return <div>{props.id}</div>;\n};\n\nconst getServerSideProps = async (context) => {\n  const { params, req, res } = context;\n\n  console.log(req); //https://nodejs.org/api/http.html#http_class_http_incomingmessage\n  console.log(res); //https://nodejs.org/api/http.html#http_class_http_serverresponse\n\n  const userId = params.userId;\n\n  //   if (!data) {\n  //     return {\n  //       notFound: true,\n  //     };\n  //   }\n\n  return {\n    //this dont use a revalidate becouse this ocours on every serverSide render  request\n    props: {\n      id: `user-id-${userId}`,\n    },\n\n    // tipial case when you do not have data to show\n    notFound: false, //boolean default is false\n\n    // redirect - if you need to redirect the user to other page\n    // redirect: {\n    //   destination : \"/noData\"\n    // }\n  };\n};\n\nexport default UserprofilePage;\nexport { getServerSideProps };\n"]},"metadata":{},"sourceType":"module"}