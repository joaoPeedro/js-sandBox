{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/client-side-data-fetching/index.js\";\nimport { useEffect, useState } from \"react\";\n\nconst LastSalesPage = () => {\n  const {\n    0: sales,\n    1: setSales\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"https://tables-7ac1f.firebaseio.com/sales.json\").then(response => {\n      console.log(response);\n\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.log(\"Network response was not ok.\");\n      }\n    }).then(data => {\n      console.log(data);\n      let arrangeSales = [];\n\n      for (const sale in data) {\n        arrangeSales.push({\n          id: sale,\n          username: data[sale].username,\n          volume: data[sale].volume\n        });\n      }\n\n      setSales(arrangeSales);\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(\"There has been a problem with your fetch operation: \" + error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  } // este vai ser o state inicial do componet (pre-render) porque n temos data\n\n\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sales.map(sale => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [sale.username, \": volume \", sale.volume]\n    }, sale.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LastSalesPage;","map":{"version":3,"sources":["/Users/joaobaltazar/Desktop/_SANDBOX/js-sandBox/_NEXT_JS/next-intro/pages/page-pre-rendering/client-side-data-fetching/index.js"],"names":["useEffect","useState","LastSalesPage","sales","setSales","isLoading","setIsLoading","fetch","then","response","console","log","ok","json","data","arrangeSales","sale","push","id","username","volume","catch","error","message","map"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACI,SAAD;AAAA,OAAYC;AAAZ,MAA4BL,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,UAAIA,QAAQ,CAACG,EAAb,EAAiB;AACf,eAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,KATH,EAUGH,IAVH,CAUSM,IAAD,IAAU;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,UAAIC,YAAY,GAAG,EAAnB;;AAEA,WAAK,MAAMC,IAAX,IAAmBF,IAAnB,EAAyB;AACvBC,QAAAA,YAAY,CAACE,IAAb,CAAkB;AAChBC,UAAAA,EAAE,EAAEF,IADY;AAEhBG,UAAAA,QAAQ,EAAEL,IAAI,CAACE,IAAD,CAAJ,CAAWG,QAFL;AAGhBC,UAAAA,MAAM,EAAEN,IAAI,CAACE,IAAD,CAAJ,CAAWI;AAHH,SAAlB;AAKD;;AACDhB,MAAAA,QAAQ,CAACW,YAAD,CAAR;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAvBH,EAwBGe,KAxBH,CAwBS,UAAUC,KAAV,EAAiB;AACtBZ,MAAAA,OAAO,CAACC,GAAR,CACE,yDAAyDW,KAAK,CAACC,OADjE;AAGD,KA5BH;AA6BD,GA/BQ,EA+BN,EA/BM,CAAT;;AAiCA,MAAIlB,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAvCyB,CAyC1B;;;AACA,MAAI,CAACA,SAAL,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,cACGF,KAAK,CAACqB,GAAN,CAAWR,IAAD,iBACT;AAAA,iBACGA,IAAI,CAACG,QADR,eAC2BH,IAAI,CAACI,MADhC;AAAA,OAASJ,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtDD;;AAwDA,eAAehB,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst LastSalesPage = () => {\n  const [sales, setSales] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"https://tables-7ac1f.firebaseio.com/sales.json\")\n      .then((response) => {\n        console.log(response);\n\n        if (response.ok) {\n          return response.json();\n        } else {\n          console.log(\"Network response was not ok.\");\n        }\n      })\n      .then((data) => {\n        console.log(data);\n        let arrangeSales = [];\n\n        for (const sale in data) {\n          arrangeSales.push({\n            id: sale,\n            username: data[sale].username,\n            volume: data[sale].volume,\n          });\n        }\n        setSales(arrangeSales);\n        setIsLoading(false);\n      })\n      .catch(function (error) {\n        console.log(\n          \"There has been a problem with your fetch operation: \" + error.message\n        );\n      });\n  }, []);\n\n  if (isLoading) {\n    return <h4>Loading...</h4>;\n  }\n\n  // este vai ser o state inicial do componet (pre-render) porque n temos data\n  if (!isLoading) {\n    return <h4>No sales</h4>;\n  }\n  return (\n    <ul>\n      {sales.map((sale) => (\n        <li key={sale.id}>\n          {sale.username}: volume {sale.volume}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default LastSalesPage;\n"]},"metadata":{},"sourceType":"module"}