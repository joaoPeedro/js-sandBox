{"version":3,"sources":["context/UserContext.js","customHooks/dataFetching.js","components/user/UserList.js","components/user/UserDetail.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","selectedUser","setSelectedUser","providerValue","useMemo","Provider","value","children","useDataFetching","url","params","isCurrent","useRef","data","dataState","state","setState","request","axios","get","then","res","current","catch","err","console","log","useEffect","newUrl","newParams","UserList","usersData","useContext","pictureRef","className","map","user","idx","onClick","handlerClickUser","ref","e","src","id","alt","name","height","width","loading","username","Posts","userId","userPosts","style","overflow","maxHeight","item","title","body","UserDetail","bgRef","infoRef","picturePos","getBoundingClientRect","top","left","classList","add","setTimeout","opacity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.355d3dfa.chunk.js","sourcesContent":["import React, { createContext, useState, useMemo } from \"react\";\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // to avoid unnecessary renders\n  const providerValue = useMemo(\n    () => ({ selectedUser, setSelectedUser }),\n    [selectedUser, setSelectedUser]\n  );\n\n  return (\n    <UserContext.Provider value={providerValue}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","import { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n\n/**\n * @param {string} url - endpoint\n * @param {obj} params - request params\n * @returns {data, dataState, request}\n */\nexport const useDataFetching = (url = null, params = {}) => {\n  //to avoid errors if the component no longer exists\n  const isCurrent = useRef(true);\n  const [state, setState] = useState({ data: null, dataState: \"PENDING\" });\n\n  const request = (url) => {\n    if (!url) return;\n    axios\n      .get(url, { params })\n      .then((res) => {\n        if (isCurrent.current) {\n          setState({ data: res.data, dataState: \"FULFILLED\" });\n        }\n      })\n      .catch((err) => {\n        if (isCurrent.current) {\n          console.log(err);\n          setState({ data: null, dataState: \"REJECTED\" });\n        }\n      });\n  };\n\n  useEffect(() => {\n    request(url, params);\n    return () => {\n      // called when the component is going to unmount\n      isCurrent.current = false;\n    };\n  }, []);\n\n  return [\n    state,\n    (newUrl = url, newParams = params) => {\n      setState(() => ({\n        data: null,\n        dataState: \"PENDING\",\n      }));\n      request(newUrl, newParams);\n    },\n  ];\n};\n","import React, { useContext, useRef } from \"react\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { useDataFetching } from \"../../customHooks/dataFetching\";\nimport \"./user.scss\";\n\nconst UserList = () => {\n  const [usersData, request] = useDataFetching(\n    `https://jsonplaceholder.typicode.com/users`\n  );\n  const { setSelectedUser } = useContext(UserContext);\n\n  const pictureRef = useRef([]);\n\n  const handlerClickUser = ({ user, idx }) => {\n    setSelectedUser({\n      user,\n      pictureRef: pictureRef.current[idx],\n    });\n  };\n\n  return (\n    <section className=\"container-s margin-top center\">\n      {usersData.dataState === \"PENDING\" ? (\n        <div className=\"loading\">LOADING USERS...</div>\n      ) : usersData.dataState === \"FULFILLED\" ? (\n        <div className=\"user-list-container\">\n          {usersData.data.map((user, idx) => (\n            <div\n              className=\"row\"\n              key={`user-list-${idx}`}\n              onClick={() => handlerClickUser({ user, idx })}\n            >\n              <picture ref={(e) => (pictureRef.current[idx] = e)}>\n                <img\n                  src={`https://picsum.photos/id/${user.id}/400/400`}\n                  alt={`${user.name}-foto`}\n                  height=\"100\"\n                  width=\"100\"\n                  loading=\"lazy\"\n                />\n              </picture>\n              <div className=\"info\">\n                <h4>{user.username}</h4>\n                <h6>{user.name}</h6>\n              </div>\n              <div className=\"icon-right\">\n                <span>></span>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div>ERROR</div>\n      )}\n    </section>\n  );\n};\n\nexport default UserList;\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { useDataFetching } from \"../../customHooks/dataFetching\";\n\nconst UserDetail = () => {\n  const { selectedUser, setSelectedUser } = useContext(UserContext);\n\n  const pictureRef = useRef();\n  const bgRef = useRef();\n  const infoRef = useRef();\n\n  useEffect(() => {\n    if (!selectedUser) return;\n    console.log(selectedUser);\n\n    const picturePos = selectedUser.pictureRef.getBoundingClientRect();\n    console.log(picturePos, pictureRef.current);\n    pictureRef.current.style.top = `${picturePos.top}px`;\n    pictureRef.current.style.left = `${picturePos.left}px`;\n    pictureRef.current.classList.add(\"animate\");\n    infoRef.current.classList.add(\"animate\");\n\n    setTimeout(() => {\n      bgRef.current.style.opacity = \"1\";\n      pictureRef.current.style.top = `140px`;\n      pictureRef.current.style.left = `40px`;\n      pictureRef.current.style.height = `400px`;\n      pictureRef.current.style.width = `400px`;\n    }, 10);\n\n    return () => {};\n  }, [selectedUser]);\n\n  return (\n    selectedUser && (\n      <section className=\"user-detail\">\n        <div className=\"bg\" ref={bgRef}></div>\n        <picture ref={pictureRef}>\n          <img\n            src={\n              selectedUser &&\n              `https://picsum.photos/id/${selectedUser.user.id}/400/400`\n            }\n            height=\"100\"\n            width=\"100\"\n            alt={`${selectedUser.user.name}-foto`}\n          />\n        </picture>\n        <div className=\"info\" ref={infoRef}>\n          <div>\n            <h1>{selectedUser.user.username}</h1>\n            <h6>{selectedUser.user.name}</h6>\n          </div>\n          <div className=\"content\">\n            <Posts id={selectedUser.user.id} />\n          </div>\n        </div>\n        <div className=\"icon-close\" onClick={() => setSelectedUser(null)}>\n          <span>X</span>\n        </div>\n      </section>\n    )\n  );\n};\n\nconst Posts = ({ id }) => {\n  const [userPosts, request] = useDataFetching(\n    `https://jsonplaceholder.typicode.com/posts`,\n    {\n      userId: id,\n    }\n  );\n\n  return userPosts.dataState === \"PENDING\" ? (\n    \"LOADING POSTS...\"\n  ) : userPosts.dataState === \"FULFILLED\" ? (\n    <div style={{ overflow: \"auto\", maxHeight: \"100%\" }}>\n      <p>posts:</p>\n      <br />\n      {userPosts.data.map((item, idx) => (\n        <article className=\"container-s\" key={`user-${id}-${idx}`}>\n          <h6>{item.title}</h6>\n          <p>{item.body}</p>\n        </article>\n      ))}\n    </div>\n  ) : (\n    \"ERROR\"\n  );\n};\n\nexport default UserDetail;\n","import UserContextProvider from \"./context/UserContext\";\nimport UserList from \"./components/user/UserList\";\nimport UserDetail from \"./components/user/UserDetail\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header margin-top\">\n        <h1 className=\"txt-center\">hub-take-home-exercise</h1>\n      </header>\n      <UserContextProvider>\n        <UserList />\n        <UserDetail />\n      </UserContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}